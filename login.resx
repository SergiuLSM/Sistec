<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASoAAABGCAMAAABMpSmIAAAABGdBTUEAALGPC/xhBQAAATJQTFRFSkpK
        cXFyTExMVVVWR0dHenp7c3R2/v7+SEhI////YWFiT09PWVlaXV5eZWVmgYKDfn5/dnd5+vr6iYmKysrK
        aGlqUlJSbm5woqOjhYWHqKiolJWWmJiZa2xtkJCR0NDQjI2OnZ2dtLS06+vr9rM0x8fH3Nzc9aw08/Pz
        +t5j/8QqsbGx+ttq98s09J419b4z/r4s+Nk1ra2t99I09sQ09aU09rk0vLy8+dhc/bpFubm5+uVh+tJk
        +d1S9Zc1+uJZ9JA1/8kp+Pj419fX+tVu5eXl+uN6++NtwcHB/Pz8/OWF+No/+dtJRUVFlns//OWQrIo8
        ++GYdWxYsp5phHtfZVxJ1opDxrFrvYxT0p4+uKh96Mxwk4Zp2ciP8sxM2cNioYJg55w7oZWC5a1E7tVh
        87RDn1XxrwAAFutJREFUeF7tnAt72zaWhkVRpCHeGYr3i0ipcpWVdzrDzIxSpmlmrTiRM3XS2k7s2M69
        /f9/Yc8BIYmkJNtpMs/O051PsU2CAAm+Ojg4AMG0bhJptR1eUSUNJUkq78jsyH9Ul8yrmu1yoikIpimK
        nBvbmsr/h1ZTbV61XVP3fV3XDQNgCYIhAK9Yk/5Dq6o2r8Wmn6a+cfX+/fkr0HuByQRayufBIoSwrVvr
        dxT5Uv2+S/KaK6SJZQClfzC9AstCG0MDuzUs0umQtuw44ORk3Ok0arNeO7Io4jSK4OYtRG7OuOGShNUS
        rtmmNbgtNUeKhSTRr1acQK9cbIJgaBbQMjlb4lnurSJE1owon/f6s9ms35tPvNTU+DZUbJGh/fL4pcN2
        qAhxbD2bsCKjaZ5ZIlwI6u6IzKivl8nLN2bk2uxqKKikylnegF0SqjkIIl+UnFbza90kxTbT0L86//Dj
        Uv/48R/PVU4URVP/eHJ+/h5gubZ6rWGRtp31hne6pXbo78P94WzuGSrL8fL802+/vX6+rDmROa+/ocg0
        E3jpYP82GrvqTRnvzPjld9WR3Wx0MD6kl1rpcDycFZGosGzbJEuuHlo1UKhXLyX6lZxSS3sFsMCwahZR
        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
        gAyVn7zBAAAAAElFTkSuQmCC
</value>
  </data>
</root>